#-------------------------------------------------------------------------------
# Cmake configuration
#-------------------------------------------------------------------------------
cmake_minimum_required(VERSION 2.8.11)
set(CUSTOM_CMAKE_MODULE_PATH "/home/yeti/mnt/workspace/src/oo-cezanne/macros/cmake")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CUSTOM_CMAKE_MODULE_PATH}")

#-------------------------------------------------------------------------------
# project configuration
#-------------------------------------------------------------------------------
set(PROJECT "google-url")
project(${PROJECT})

#-------------------------------------------------------------------------------
# Build Options
#-------------------------------------------------------------------------------
add_compile_options(-fPIC)
add_compile_options(-std=c++11) # c++11
add_compile_options(-fno-rtti)  # Removing rtti

#-------------------------------------------------------------------------------
# Collect source
#-------------------------------------------------------------------------------
file(GLOB_RECURSE BASE_SRC_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} base/*.cc)
file(GLOB_RECURSE BASE_HDR_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} base/*.h)

file(GLOB_RECURSE SRC_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} src/*.cc)
file(GLOB_RECURSE HDR_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} src/*.h)


#-------------------------------------------------------------------------------
# Software Dependencies
#-------------------------------------------------------------------------------
find_package(GTest REQUIRED)
include_directories(${GTEST_INCLUDE_DIRS})

#-------------------------------------------------------------------------------
# Create binaries
#-------------------------------------------------------------------------------
set(include_dirs
    ${CMAKE_CURRENT_SOURCE_DIR}/..
    ${CMAKE_CURRENT_SOURCE_DIR}
    )

include_directories(${include_dirs})

add_library(${PROJECT}
	${SRC_FILES}
	${SRC_FILES}
	${BASE_SRC_FILES}
	${BASE_SRC_FILES}
    )

target_link_libraries(
    ${PROJECT}
    ${GTEST_BOTH_LIBRARIES}
    )
